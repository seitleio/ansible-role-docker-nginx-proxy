---
- name: Get infos on containers
  community.docker.docker_container_info:
    name: "{{ container }}"
  register: container_info

- name: Add container to the proxy network
  ansible.builtin.command: "docker network connect proxy_network {{ container }}"
  loop: "{{ container_info['container']['Config']['Env'] }}"
  register: network_membership
  when:
    - item is match("VIRTUAL_HOST=.*")
    - container_info.container.NetworkSettings.Networks.proxy_network is not defined

- name: Restart affected container
  ansible.builtin.command: "docker restart {{ container }}"
  when:
    - network_membership.changed

- name: Remember vhost domain
  set_fact:
    vhost_domain: "{{ (item | split('='))[1] }}"
  loop: "{{ container_info['container']['Config']['Env'] }}"
  when:
    - item is match("VIRTUAL_HOST=.*")

- name: Get all NGINX_ variables
  set_fact:
    nginx_settings: "{{ nginx_settings|default([]) + [ var ] }}"
  vars:
    var:
      setting: "{{ (item | split('='))[0] | regex_replace('NGINX_','') | lower }}"
      value: "{{ (item | split('='))[1] }}"
  loop: "{{ container_info['container']['Config']['Env'] }}"
  when:
    - vhost_domain is defined
    - item is match("NGINX_(?!VERSION)[A-Z_]*=.*")

- name: Configure vhost custom settings
  ansible.builtin.lineinfile:
    path: "{{ service_data_location }}/vhost.d/{{ vhost_domain }}"
    regexp: "{{ item.setting }} .*;"
    line: "{{ item.setting}} {{ item.value }};"
    create: true
  when:
    - vhost_domain is defined
    - nginx_settings is defined
  loop: "{{ nginx_settings }}"
  notify:
    - Restart nginx-proxy container